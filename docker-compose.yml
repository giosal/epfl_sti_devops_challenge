version: '3'

services:
  web:
    restart: always
    build: ./web
    expose:
      - "8000"
    links:
      - postgres:postgres
      - redis:redis
    volumes:
      - web-django:/usr/src/app
      - web-static:/usr/src/app/static
    env_file: .env
    environment:
      DEBUG: 'true'
    command: /usr/local/bin/gunicorn epflchallenge.wsgi:application -w 2 -b :8000
    depends_on:
      - postgres

  nginx1:
    restart: always
    build: ./nginx/
    expose:
      - "80"
    volumes:
      - web-static:/www/static
    links:
      - web:web
    networks:
      public_net:
        ipv4_address: 172.16.0.10
        aliases:
          - nginx1
    depends_on:
      - web

  nginx2:
    restart: always
    build: ./nginx/
    expose:
      - "80"
    volumes:
      - web-static:/www/static
    links:
      - web:web
    env_file: .net_env
    networks:
      public_net:
        ipv4_address: 172.16.0.20
        aliases: 
          - nginx2
    depends_on:
      - web

  haproxy:
    build: ./haproxy
    ports:
        - 80:80
    networks:
      public_net:
        ipv4_address: 172.16.0.2
    environment:
      - NGINX_1_IP=172.16.0.10
      - NGINX_2_IP=172.16.0.20
      - NGINX_EXPOSED_PORT=80
    depends_on:
      - nginx1
      - nginx2

  postgres:
    restart: always
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: 'postgres'


  redis:
    restart: always
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

networks:
  public_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/24

volumes:
  web-django:
  web-static:
  pgdata:
  redisdata:
